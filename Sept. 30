Sub BuildPrevAndCurrDictionaries()
    Dim wsPrev As Worksheet, wsCurr As Worksheet
    Dim lastRowPrev As Long, lastRowCurr As Long
    Dim i As Long
    Dim key As String, valueStr As String
    Dim prev As Object, curr As Object
    Dim dictKey As Variant   ' <-- Use Variant for looping keys
    
    ' Create dictionaries
    Set prev = CreateObject("Scripting.Dictionary")
    Set curr = CreateObject("Scripting.Dictionary")
    
    ' Set worksheets
    Set wsPrev = ThisWorkbook.Sheets("PrevOpps")
    Set wsCurr = ThisWorkbook.Sheets("CurrOpps")
    
    ' Find last rows
    lastRowPrev = wsPrev.Cells(wsPrev.Rows.Count, "D").End(xlUp).Row
    lastRowCurr = wsCurr.Cells(wsCurr.Rows.Count, "D").End(xlUp).Row
    
    ' === Build prev dictionary ===
    For i = 2 To lastRowPrev
        key = Trim(wsPrev.Cells(i, "D").Value) & "_" & Trim(wsPrev.Cells(i, "P").Value)
        valueStr = Join(Array(wsPrev.Cells(i, "S").Value, _
                              wsPrev.Cells(i, "W").Value, _   ' Cancellation Probability
                              wsPrev.Cells(i, "X").Value, _
                              wsPrev.Cells(i, "AA").Value, _
                              wsPrev.Cells(i, "AC").Value), "|")
        prev(key) = valueStr
    Next i
    
    ' === Build curr dictionary ===
    For i = 2 To lastRowCurr
        key = Trim(wsCurr.Cells(i, "D").Value) & "_" & Trim(wsCurr.Cells(i, "P").Value)
        valueStr = Join(Array(wsCurr.Cells(i, "S").Value, _
                              wsCurr.Cells(i, "W").Value, _   ' Cancellation Probability
                              wsCurr.Cells(i, "X").Value, _
                              wsCurr.Cells(i, "AA").Value, _
                              wsCurr.Cells(i, "AC").Value), "|")
        curr(key) = valueStr
    Next i
    
    ' === Print dictionaries ===
    Debug.Print "=== PREV Dictionary ==="
    For Each dictKey In prev.Keys
        Debug.Print dictKey & " -> " & prev(dictKey)
    Next dictKey
    
    Debug.Print "=== CURR Dictionary ==="
    For Each dictKey In curr.Keys
        Debug.Print dictKey & " -> " & curr(dictKey)
    Next dictKey
    
    ' === Call the check procedure ===
    Call CheckDictionaries(prev, curr)
End Sub




Option Explicit

Sub CheckDictionaries(prev As Object, curr As Object)
    Dim wsReport As Worksheet, wsPrev As Worksheet, wsCurr As Worksheet
    Dim dictKey As Variant
    Dim reportRow As Long
    Dim valsPrev As Variant, valsCurr As Variant
    Dim foundRow As Long
    Dim lastRowPrev As Long, lastRowCurr As Long
    Dim colCount As Long
    Dim j As Long
    Dim extraCols As Variant
    Dim colHeaders As Variant
    
    ' Source sheets
    Set wsPrev = ThisWorkbook.Sheets("PrevOpps")
    Set wsCurr = ThisWorkbook.Sheets("CurrOpps")
    colCount = wsPrev.Cells(1, wsPrev.Columns.Count).End(xlToLeft).Column
    
    ' Create/clear the Report sheet
    On Error Resume Next
    Set wsReport = ThisWorkbook.Sheets("Report")
    On Error GoTo 0
    If wsReport Is Nothing Then
        Set wsReport = ThisWorkbook.Sheets.Add
        wsReport.Name = "Report"
    Else
        wsReport.Cells.Clear
    End If
    
    ' Copy header from prev
    wsPrev.Rows(1).Resize(1, colCount).Copy wsReport.Rows(1)
    
    ' Add headers for Prev values
    extraCols = Array("S", "W", "X", "AA", "AC")
    colHeaders = Array("Sales Stage", "Cancellation Probability", "Close Date", "Amount", "Confidence") ' <-- replace with your real headers
    
    For j = LBound(extraCols) To UBound(extraCols)
        wsReport.Cells(1, colCount + j + 1).Value = "Prev " & colHeaders(j)
    Next j
    
    reportRow = 2
    lastRowPrev = wsPrev.Cells(wsPrev.Rows.Count, "D").End(xlUp).Row
    lastRowCurr = wsCurr.Cells(wsCurr.Rows.Count, "D").End(xlUp).Row
    
    ' === Step 1: Loop through curr ===
    For Each dictKey In curr.Keys
        If prev.Exists(dictKey) Then
            If prev(dictKey) = curr(dictKey) Then
                ' identical -> skip
            Else
                ' different -> copy row from curr, then compare & highlight
                foundRow = FindRowByKey(wsCurr, CStr(dictKey), lastRowCurr)
                If foundRow > 0 Then
                    wsCurr.Rows(foundRow).Resize(1, colCount).Copy wsReport.Rows(reportRow)
                    
                    valsPrev = Split(prev(dictKey), "|")
                    valsCurr = Split(curr(dictKey), "|")
                    
                    ' Column index map: S=19, W=23, X=24, AA=27, AC=29
                    For j = 0 To UBound(valsCurr)
                        If valsCurr(j) <> valsPrev(j) Then
                            Select Case j
                                Case 0: wsReport.Cells(reportRow, 19).Interior.Color = vbYellow  ' S
                                Case 1: wsReport.Cells(reportRow, 23).Interior.Color = vbYellow  ' W (Cancellation Probability)
                                Case 2: wsReport.Cells(reportRow, 24).Interior.Color = vbYellow  ' X
                                Case 3: wsReport.Cells(reportRow, 27).Interior.Color = vbYellow  ' AA
                                Case 4: wsReport.Cells(reportRow, 29).Interior.Color = vbYellow  ' AC
                            End Select
                        End If
                        ' Add Prev value into extra column
                        wsReport.Cells(reportRow, colCount + j + 1).Value = valsPrev(j)
                    Next j
                    
                    reportRow = reportRow + 1
                End If
            End If
        Else
            ' New key in curr -> copy row, highlight red
            foundRow = FindRowByKey(wsCurr, CStr(dictKey), lastRowCurr)
            If foundRow > 0 Then
                wsCurr.Rows(foundRow).Resize(1, colCount).Copy wsReport.Rows(reportRow)
                wsReport.Rows(reportRow).Interior.Color = vbRed
                reportRow = reportRow + 1
            End If
        End If
    Next dictKey
    
    ' === Step 2: Keys in prev but missing in curr ===
    For Each dictKey In prev.Keys
        If Not curr.Exists(dictKey) Then
            foundRow = FindRowByKey(wsPrev, CStr(dictKey), lastRowPrev)
            If foundRow > 0 Then
                wsPrev.Rows(foundRow).Resize(1, colCount).Copy wsReport.Rows(reportRow)
                wsReport.Rows(reportRow).Interior.Color = RGB(255, 165, 0) ' Orange
                reportRow = reportRow + 1
            End If
        End If
    Next dictKey
    
    ' Readability
    wsReport.Columns.AutoFit
End Sub
